import { axios } from "@pipedream/platform"

export default defineComponent({
  props: {
    email: {
      type: "string",
      label: "User Email (lowercase)",
    },
  },
  async run({ steps, $ }) {
    const BASE_ID = "appQfzQUbWtJj8Ck6"
    const TABLE_ID = "tbl87AICCbvbgrLCY"
    const API_KEY = process.env.AIRTABLE_TOKEN

    const url = `https://api.airtable.com/v0/${BASE_ID}/${TABLE_ID}`
    const filterFormula = `LOWER({Email Address}) = '${this.email}'`

    try {
      const response = await axios($, {
        method: "get",
        url,
        headers: {
          Authorization: `Bearer ${API_KEY}`,
        },
        params: {
          filterByFormula: filterFormula,
        },
      })

      if (!response.records || response.records.length === 0) {
        throw new Error("No matching user found in Airtable.")
      }

      const userData = response.records[0].fields

      return {
        statusCode: 200,
        headers: { 'Content-Type': 'application/json' },
        body: {
          success: true,
          message: "User data retrieved successfully.",
          data: userData,
        },
      }
    } catch (error) {
      console.error("Airtable fetch error:", error.message)

      return {
        statusCode: 500,
        headers: { 'Content-Type': 'application/json' },
        body: {
          success: false,
          error: error?.response?.data || error.message || "Unknown error",
        },
      }
    }
  },
})
